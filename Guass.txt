
import java.util.*;

public class Main
{
	
    public static void main(String[] args) {
        double[][] augmentedMatrix = {
                {2, 1, -1, 8},
                {-3, -1, 2, -11},
                {-2, 1, 2, -3}
        };

        solveSystemOfEquations(augmentedMatrix);

        // Display the solution
        System.out.println("Solution:");
        for (int i = 0; i < augmentedMatrix.length; i++) {
            System.out.println("x" + (i + 1) + " = " + augmentedMatrix[i][augmentedMatrix[i].length - 1]);
        }
    }

    private static void solveSystemOfEquations(double[][] augmentedMatrix) {
        int rows = augmentedMatrix.length;
        int cols = augmentedMatrix[0].length - 1; // Last column is the augmented part

        for (int i = 0; i < rows - 1; i++) {
            // Make the diagonal element of the current row equal to 1
            double diagonalElement = augmentedMatrix[i][i];
            for (int j = i; j < cols + 1; j++) {
                augmentedMatrix[i][j] /= diagonalElement;
            }

            // Make the elements below the diagonal in the current column equal to 0
            for (int k = i + 1; k < rows; k++) {
                double factor = augmentedMatrix[k][i];
                for (int j = i; j < cols + 1; j++) {
                    augmentedMatrix[k][j] -= factor * augmentedMatrix[i][j];
                }
            }
        }

        // Back substitution
        for (int i = rows - 1; i >= 0; i--) {
            for (int j = i + 1; j < cols; j++) {
                augmentedMatrix[i][cols] -= augmentedMatrix[i][j] * augmentedMatrix[j][cols];
            }
        }
    }
}
